set(COMMIT_ID_IN_VERSION ON CACHE BOOL "Include commit ID in version")
file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/version")
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)
    if (NOT COMMIT_ID_IN_VERSION)
        set(VERSION "${Q1V_VERSION}")
        configure_file("${CMAKE_CURRENT_SOURCE_DIR}/q1v/version.h.in" "${CMAKE_CURRENT_BINARY_DIR}/version/version.h")
        add_custom_target(version ALL)
    elseif(DEFINED COMMIT)
        string(REPLACE "." "\\." VERSION_RE "${Q1V_VERSION}")
        if(NOT REFS MATCHES "(\\(|, )tag: v${VERSION_RE}(\\)|, )")
            set(VERSION "${Q1V_VERSION}-g${COMMIT}")
        endif()
        configure_file("${CMAKE_CURRENT_SOURCE_DIR}/q1v/version.h.in" "${CMAKE_CURRENT_BINARY_DIR}/version/version.h")
        add_custom_target(version ALL)
    else()
        find_package(Git QUIET)
        if(Git_FOUND OR GIT_FOUND)
            message(STATUS "Found Git: ${GIT_EXECUTABLE}")
            add_custom_target(version ALL "${CMAKE_COMMAND}" "-D" "VERSION=${Q1V_VERSION}" "-D" "GIT=${GIT_EXECUTABLE}" "-D" "TO=${CMAKE_CURRENT_BINARY_DIR}/version/version.h" "-P" "${CMAKE_CURRENT_SOURCE_DIR}/q1v/version.cmake" WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
        else()
            message(STATUS "WARNING: Git was not found!")
            set(VERSION "${Q1V_VERSION}")
            configure_file("${CMAKE_CURRENT_SOURCE_DIR}/q1v/version.h.in" "${CMAKE_CURRENT_BINARY_DIR}/version/version.h")
            add_custom_target(version ALL)
        endif()
    endif()
else()
    set(VERSION "${Q1V_VERSION}")
    configure_file("${CMAKE_CURRENT_SOURCE_DIR}/q1v/version.h.in" "${CMAKE_CURRENT_BINARY_DIR}/version/version.h")
    add_custom_target(version ALL)
endif()